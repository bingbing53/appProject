<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    package="cn.trust_tech.sqyj">

    <!-- The INTERNET permission is required for development. Specifically,
         flutter needs it to communicate with the running application
         to allow setting breakpoints, to provide hot reload, etc.
    -->
    <uses-permission android:name="android.permission.INTERNET"/>
    <uses-permission android:name="android.permission.RECORD_AUDIO" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.RECORD_AUDIO" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.CAMERA" />
    <uses-feature android:name="android.hardware.camera" />
    <uses-permission android:name="android.permission.READ_CONTACTS"/>
    <uses-permission android:name="android.permission.READ_PHONE_STATE"/>
    <!--手机震动-->
    <uses-permission android:name="android.permission.VIBRATE"/>
    <!--用于进行网络定位-->
    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION"></uses-permission>
    <!--用于访问GPS定位-->
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION"></uses-permission>
    <!--用于访问wifi网络信息，wifi信息会用于进行网络定位-->
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE"></uses-permission>
    <!--这个权限用于获取wifi的获取权限，wifi信息会用来进行网络定位-->
    <uses-permission android:name="android.permission.CHANGE_WIFI_STATE"></uses-permission>

    <!--for Samsung-->
    <uses-permission android:name="com.sec.android.provider.badge.permission.READ"/>
    <uses-permission android:name="com.sec.android.provider.badge.permission.WRITE"/>

    <!--for htc-->
    <uses-permission android:name="com.htc.launcher.permission.READ_SETTINGS"/>
    <uses-permission android:name="com.htc.launcher.permission.UPDATE_SHORTCUT"/>

    <!--for sony-->
    <uses-permission android:name="com.sonyericsson.home.permission.BROADCAST_BADGE"/>
    <uses-permission android:name="com.sonymobile.home.permission.PROVIDER_INSERT_BADGE"/>

    <!--for apex-->
    <uses-permission android:name="com.anddoes.launcher.permission.UPDATE_COUNT"/>

    <!--for solid-->
    <uses-permission android:name="com.majeur.launcher.permission.UPDATE_BADGE"/>

    <!--for huawei-->
    <uses-permission android:name="com.huawei.android.launcher.permission.CHANGE_BADGE"/>
    <uses-permission android:name="com.huawei.android.launcher.permission.READ_SETTINGS"/>
    <uses-permission android:name="com.huawei.android.launcher.permission.WRITE_SETTINGS"/>

    <!--for ZUK-->
    <uses-permission android:name="android.permission.READ_APP_BADGE"/>

    <!--for OPPO-->
    <uses-permission android:name="com.oppo.launcher.permission.READ_SETTINGS"/>
    <uses-permission android:name="com.oppo.launcher.permission.WRITE_SETTINGS"/>

    <!--for EvMe-->
    <uses-permission android:name="me.everything.badger.permission.BADGE_COUNT_READ"/>
    <uses-permission android:name="me.everything.badger.permission.BADGE_COUNT_WRITE"/>

    <uses-permission android:name="android.permission.REQUEST_INSTALL_PACKAGES"/>

    <!-- io.flutter.app.FlutterApplication is an android.app.Application that
         calls FlutterMain.startInitialization(this); in its onCreate method.
         In most cases you can leave this as-is, but you if you want to provide
         additional functionality it is fine to subclass or reimplement
         FlutterApplication and put your custom class here. -->
    <application
        tools:replace="android:allowBackup"
        android:name=".MyApplication"
        android:label="社区e家"
        android:icon="@mipmap/ic_launcher"
        android:allowBackup="true"
        android:usesCleartextTraffic="true">
        <activity
            android:name=".MainActivity"
            android:launchMode="singleTop"
            android:theme="@style/LaunchTheme"
            android:configChanges="orientation|keyboardHidden|keyboard|screenSize|locale|layoutDirection|fontScale|screenLayout|density"
            android:hardwareAccelerated="true"
            android:windowSoftInputMode="adjustResize">
            <!-- This keeps the window background of the activity showing
                 until Flutter renders its first frame. It can be removed if
                 there is no splash screen (such as the default splash screen
                 defined in @style/LaunchTheme). -->
            <meta-data
                android:name="io.flutter.app.android.SplashScreenUntilFirstFrame"
                android:value="true" />
            <intent-filter>
                <action android:name="android.intent.action.MAIN"/>
                <category android:name="android.intent.category.LAUNCHER"/>
            </intent-filter>
            <intent-filter>
                <action android:name="android.intent.action.VIEW"/>
                <category android:name="android.intent.category.DEFAULT"/>
                <category android:name="android.intent.category.BROWSABLE"/>
                <data android:scheme="shequyijia" android:host="trust-tech" android:pathPrefix="/open"/>
            </intent-filter>
        </activity>

        <activity
                android:name="com.yalantis.ucrop.UCropActivity"
                android:screenOrientation="portrait"
                android:theme="@style/Theme.AppCompat.Light.NoActionBar"/>

        <activity android:name="com.apptreesoftware.barcodescan.BarcodeScannerActivity"/>

        <!--蓝牙服务-->
        <service android:name="com.intelligoo.sdk.BluetoothLeService" android:enabled="true" />
        <service android:name="com.intelligoo.sdk.AutoOpenService" android:enabled="true" />

        <receiver android:name=".receiver.NotifyBroadCastReceiver">
            <intent-filter>
                <action android:name="com.xuexiang.pushdemo.receiver.ACTION_SUBMIT" />
                <action android:name="com.xuexiang.pushdemo.receiver.ACTION_CANCEL" />
                <action android:name="com.xuexiang.pushdemo.receiver.ACTION_REPLY" />
            </intent-filter>
        </receiver>

        <!--自定义消息推送接收器-->
        <receiver android:name=".push.CustomPushReceiver">
            <intent-filter>
                <action android:name="com.xuexiang.xpush.core.action.RECEIVE_CONNECT_STATUS_CHANGED" />
                <action android:name="com.xuexiang.xpush.core.action.RECEIVE_NOTIFICATION" />
                <action android:name="com.xuexiang.xpush.core.action.RECEIVE_NOTIFICATION_CLICK" />
                <action android:name="com.xuexiang.xpush.core.action.RECEIVE_MESSAGE" />
                <action android:name="com.xuexiang.xpush.core.action.RECEIVE_COMMAND_RESULT" />

                <category android:name="${applicationId}" />
            </intent-filter>
        </receiver>

        <!--如果引入了xpush-huawei库-->
        <meta-data
            android:name="XPush_HuaweiPush_1002"
            android:value="com.xuexiang.xpush.huawei.HuaweiPushClient" />

        <!--如果引入了xpush-xiaomi库-->
        <meta-data
            android:name="XPush_MIPush_1003"
            android:value="com.xuexiang.xpush.xiaomi.XiaoMiPushClient" />

        <!--华为HMS推送静态注册-->
        <meta-data
            android:name="com.huawei.hms.client.appid"
            android:value="101370153"/>

        <!--小米推送静态注册，下面的“\ ”必须加上，否则将无法正确读取-->
        <meta-data
            android:name="MIPUSH_APPID"
            android:value="\ 2882303761518256072"/>
        <meta-data
            android:name="MIPUSH_APPKEY"
            android:value="\ 5941825631072"/>

        <!--高德地图-->
        <meta-data
            android:name="com.amap.api.v2.apikey"
            android:value="8f7356a2395befa62541cd8c11f65a2c"/>

    </application>
</manifest>
